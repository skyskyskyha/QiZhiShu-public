{"version":3,"file":"static/js/469.16e3fd3a.chunk.js","mappings":"8KAGaA,EAAkB,SAACC,GAC5B,OAAOC,EAAAA,EAAAA,GAAQ,CACXC,IAAI,iBAADC,OAAmBH,GACtBI,OAAQ,OAEhB,EAEaC,EAAiB,SAACL,GAC3B,OAAOC,EAAAA,EAAAA,GAAQ,CACXC,IAAI,wBAADC,OAA0BH,GAC7BI,OAAQ,OAEhB,C,0PCbME,EAAY,CAAC,YAAa,YAAa,UAAW,UAAW,WAAY,aAYzEC,GAAeC,EAAAA,EAAAA,KAEfC,GAA+BC,EAAAA,EAAAA,GAAa,MAAO,CACvDC,KAAM,WACNC,KAAM,OACNC,kBAAmB,SAACC,EAAOC,GAAM,OAAKA,EAAOC,IAAI,IAEnD,SAASC,EAAqBH,GAC5B,OAAOI,EAAAA,EAAAA,GAAoB,CACzBJ,MAAAA,EACAH,KAAM,WACNJ,aAAAA,GAEJ,CASA,SAASY,EAAaC,EAAUC,GAC9B,IAAMC,EAAgBC,EAAAA,SAAAA,QAAuBH,GAAUI,OAAOC,SAC9D,OAAOH,EAAcI,QAAO,SAACC,EAAQC,EAAOC,GAO1C,OANAF,EAAOG,KAAKF,GACRC,EAAQP,EAAcS,OAAS,GACjCJ,EAAOG,KAAmBP,EAAAA,aAAmBF,EAAW,CACtDW,IAAK,aAAF7B,OAAe0B,MAGfF,CACT,GAAG,GACL,CACA,IAQaM,EAAQ,SAAHC,GAGZ,IAFJC,EAAUD,EAAVC,WACAC,EAAKF,EAALE,MAEIrB,GAASsB,EAAAA,EAAAA,GAAS,CACpBC,QAAS,OACTC,cAAe,WACdC,EAAAA,EAAAA,IAAkB,CACnBJ,MAAAA,IACCK,EAAAA,EAAAA,IAAwB,CACzBC,OAAQP,EAAWQ,UACnBC,YAAaR,EAAMQ,YAAYF,UAC7B,SAAAG,GAAS,MAAK,CAChBN,cAAeM,EAChB,KACD,GAAIV,EAAWW,QAAS,CACtB,IAAMC,GAAcC,EAAAA,EAAAA,IAAmBZ,GACjCa,EAAOC,OAAOC,KAAKf,EAAMQ,YAAYF,QAAQhB,QAAO,SAAC0B,EAAKC,GAI9D,OAHkC,kBAAvBlB,EAAWW,SAA0D,MAAlCX,EAAWW,QAAQO,IAAuD,kBAAzBlB,EAAWQ,WAA8D,MAApCR,EAAWQ,UAAUU,MACvJD,EAAIC,IAAc,GAEbD,CACT,GAAG,CAAC,GACEE,GAAkBb,EAAAA,EAAAA,IAAwB,CAC9CC,OAAQP,EAAWQ,UACnBM,KAAAA,IAEIM,GAAgBd,EAAAA,EAAAA,IAAwB,CAC5CC,OAAQP,EAAWW,QACnBG,KAAAA,IAE6B,kBAApBK,GACTJ,OAAOC,KAAKG,GAAiBE,SAAQ,SAACH,EAAYxB,EAAOe,GAEvD,IADuBU,EAAgBD,GAClB,CACnB,IAAMI,EAAyB5B,EAAQ,EAAIyB,EAAgBV,EAAYf,EAAQ,IAAM,SACrFyB,EAAgBD,GAAcI,CAChC,CACF,IAUF1C,GAAS2C,EAAAA,EAAAA,GAAU3C,GAAQyB,EAAAA,EAAAA,IAAkB,CAC3CJ,MAAAA,GACCmB,GAVwB,SAACV,EAAWQ,GACrC,MAAO,CACL,iCAA+BM,EAAAA,EAAAA,GAAA,CAC7BC,OAAQ,GAAC,SAAAzD,QAnDUwC,EAoDYU,EAAaC,EAAgBD,GAAclB,EAAWQ,UAnDtF,CACLkB,IAAK,OACL,cAAe,QACfC,OAAQ,MACR,iBAAkB,UAClBnB,MA8C0GoB,EAAAA,EAAAA,IAAShB,EAAaF,KApDvG,IAAAF,CAuDzB,IAIF,CAEA,OADA5B,GAASiD,EAAAA,EAAAA,IAAwB5B,EAAMQ,YAAa7B,EAEtD,E,wBC1GMkD,ED2GS,WAAmC,IAAdC,EAAOC,UAAApC,OAAA,QAAAqC,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC7CE,EAKIH,EAHFI,sBAAAA,OAAqB,IAAAD,EAAG5D,EAA4B4D,EAAAE,EAGlDL,EAFFM,cAAAA,OAAa,IAAAD,EAAGtD,EAAoBsD,EAAAE,EAElCP,EADFQ,cAAAA,OAAa,IAAAD,EAAG,WAAUA,EAQtBE,EAAYL,EAAsBrC,GAClCgC,EAAqB1C,EAAAA,YAAiB,SAAcqD,EAASC,GACjE,IAAMC,EAAaN,EAAcI,GAC3B9D,GAAQiE,EAAAA,EAAAA,GAAaD,GAC3BE,EAOMlE,EANFmE,UAAAA,OAAS,IAAAD,EAAG,MAAKA,EAAAE,EAMfpE,EALF6B,UAAAA,OAAS,IAAAuC,EAAG,SAAQA,EAAAC,EAKlBrE,EAJFgC,QAAAA,OAAO,IAAAqC,EAAG,EAACA,EACXC,EAGEtE,EAHFsE,QACAhE,EAEEN,EAFFM,SACAiE,EACEvE,EADFuE,UAEFC,GAAQC,EAAAA,EAAAA,GAA8BzE,EAAOR,GACzC6B,EAAa,CACjBQ,UAAAA,EACAG,QAAAA,GAEI0C,GAnBCC,EAAAA,EAAAA,GAHO,CACZzE,KAAM,CAAC,UAEoB,SAAAJ,GAAI,OAAI8E,EAAAA,EAAAA,GAAqBhB,EAAe9D,EAAK,GAAE,CAAC,GAoBjF,OAAoB+E,EAAAA,EAAAA,KAAKhB,GAAWtC,EAAAA,EAAAA,GAAS,CAC3CuD,GAAIX,EACJ9C,WAAYA,EACZ0C,IAAKA,EACLQ,WAAWQ,EAAAA,EAAAA,GAAKL,EAAQxE,KAAMqE,IAC7BC,EAAO,CACRlE,SAAUgE,EAAUjE,EAAaC,EAAUgE,GAAWhE,IAE1D,IAQA,OAAO6C,CACT,CC3Jc6B,CAAY,CACxBxB,uBAAuByB,EAAAA,EAAAA,IAAO,MAAO,CACnCpF,KAAM,WACNC,KAAM,OACNC,kBAAmB,SAACC,EAAOC,GAAM,OAAKA,EAAOC,IAAI,IAEnDwD,cAAe,SAAAI,GAAO,OAAIJ,EAAAA,EAAAA,GAAc,CACtC1D,MAAO8D,EACPjE,KAAM,YACN,IAoCJ,I,oBC9CMqF,EAAU,CACZ,CAAEC,MAAO,KAAMC,WAAY,2BAAQC,MAAO,KAM1C,CAAGF,MAAO,QACNC,WAAY,eACZE,WAAY,SAACC,GACb,OAAOV,EAAAA,EAAAA,KAAA,KAAGW,KAAI,WAAAnG,OAAakG,EAAOrG,IAAKoB,SAAEiF,EAAOE,eAAeC,YAC/D,EACAL,MAAO,MAEX,CAAEF,MAAO,OAAQC,WAAY,eAAMC,MAAO,MAGjCM,EAAc,SAACC,GAExB,OACIf,EAAAA,EAAAA,KAAA,OAAK1D,MAAO,CAAE0E,OAAQ,IAAKR,MAAO,QAAS/E,UACvCuE,EAAAA,EAAAA,KAACiB,EAAAA,EAAQ,CACLC,KAAMH,EAAKI,SACXd,QAASA,EACTe,SAAU,EACVC,mBAAoB,CAAC,GACrBC,GAAI,CACAd,MAAO,OACP,2BAA4B,CACxBe,gBAAiB,2BACjBC,MAAO,UACPC,WAAY,OAEhB,4BAA6B,CACzBD,MAAO,kBAM/B,E,UCjCe,SAASE,IACpB,IAAAC,EAAwB/F,EAAAA,SAAe,GAAEgG,GAAAC,EAAAA,EAAAA,GAAAF,EAAA,GAAlCG,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,EAAgCpG,EAAAA,SAAe,IAAGqG,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA3Cb,EAAQc,EAAA,GAAEC,EAAWD,EAAA,GA0B5B,OAtBAE,EAAAA,EAAAA,YAAU,WAEN,IADA,IAAMC,EAAM,GAAIC,EAAY,GAAEC,EAAA,SAAAC,GAE1B,IAAIlI,GAAMyH,EAAO,GAAKU,EAAAA,GAAmBD,EACzC,GAAIlI,EAAGoI,EAAAA,GAAY,MAAD,QAElBJ,EAASE,EAAE,IAAK7H,EAAAA,EAAAA,GAAeL,GAC1BqI,MAAK,SAAAC,GACFP,EAAIG,EAAE,GAAG,CACLlI,GAAAA,EACAuI,MAAOD,EAAKA,KAAKE,aACjBC,KAAMH,EAAKA,KAAKI,KAExB,GACR,EAZSR,EAAE,EAAEA,GAAGC,EAAAA,GAAiBD,IAAI,CAAD,aAAAD,EAAAC,GAG5B,KAAM,CAUdS,QAAQC,IAAIZ,GAAUK,MAClB,WACIR,EAAYE,EAChB,GAER,GAAE,CAACN,KAGCoB,EAAAA,EAAAA,MAAA,OAAAzH,SAAA,EACIuE,EAAAA,EAAAA,KAACc,EAAW,CAACK,cAAqB1C,IAAX0C,EAAqB,GAAGA,KAC/C+B,EAAAA,EAAAA,MAAC5E,EAAK,CAACnB,QAAS,EAAE1B,SAAA,EACdyH,EAAAA,EAAAA,MAACC,EAAAA,EAAU,CAAA1H,SAAA,CAAC,SAAEqG,EAAK,aACnB9B,EAAAA,EAAAA,KAACoD,EAAAA,EAAU,CAAC9G,MAAO,CAAC2B,OAAO,QAASoF,MAAOC,KAAKC,KAAKd,EAAAA,GAAYD,EAAAA,IAAmBV,KAAMA,EAAM0B,SA9BvF,SAACC,EAAGC,GACrB3B,EAAQ2B,EACZ,SAgCJ,C","sources":["api/Course.js","../node_modules/@mui/system/esm/Stack/createStack.js","../node_modules/@mui/material/Stack/Stack.js","components/Problem/ProblemInfo.js","components/Problem/ProblemList.js"],"sourcesContent":["\r\nimport request from \"./request\";\r\n\r\nexport const getCourseDetail = (id) => {\r\n    return request({\r\n        url: `/class/detail/${id}`,\r\n        method: 'get'\r\n    })\r\n}\r\n\r\nexport const getProblemInfo = (id) => {\r\n    return request({\r\n        url: `/problem/problemInfo/${id}`,\r\n        method: 'get'\r\n    })\r\n}\r\n\r\n\r\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport systemStyled from '../styled';\nimport useThemePropsSystem from '../useThemeProps';\nimport { extendSxProp } from '../styleFunctionSx';\nimport createTheme from '../createTheme';\nimport { handleBreakpoints, mergeBreakpointsInOrder, resolveBreakpointValues } from '../breakpoints';\nimport { createUnarySpacing, getValue } from '../spacing';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\n// widening Theme to any so that the consumer can own the theme structure.\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n});\nfunction useThemePropsDefault(props) {\n  return useThemePropsSystem({\n    props,\n    name: 'MuiStack',\n    defaultTheme\n  });\n}\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex',\n    flexDirection: 'column'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      return {\n        '& > :not(style) + :not(style)': {\n          margin: 0,\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nexport default function createStack(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiStack'\n  } = options;\n  const useUtilityClasses = () => {\n    const slots = {\n      root: ['root']\n    };\n    return composeClasses(slots, slot => generateUtilityClass(componentName, slot), {});\n  };\n  const StackRoot = createStyledComponent(style);\n  const Stack = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n    const themeProps = useThemeProps(inProps);\n    const props = extendSxProp(themeProps); // `color` type conflicts with html color attribute.\n    const {\n        component = 'div',\n        direction = 'column',\n        spacing = 0,\n        divider,\n        children,\n        className\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = {\n      direction,\n      spacing\n    };\n    const classes = useUtilityClasses();\n    return /*#__PURE__*/_jsx(StackRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      ref: ref,\n      className: clsx(classes.root, className)\n    }, other, {\n      children: divider ? joinChildren(children, divider) : children\n    }));\n  });\n  process.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n    divider: PropTypes.node,\n    spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Stack;\n}","import PropTypes from 'prop-types';\nimport { createStack } from '@mui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Stack = createStack({\n  createStyledComponent: styled('div', {\n    name: 'MuiStack',\n    slot: 'Root',\n    overridesResolver: (props, styles) => styles.root\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Stack;","import * as React from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\n\r\nconst columns = [\r\n    { field: 'id', headerName: '题目编号', width: 100 ,\r\n        // renderCell: (params) => {\r\n        //     return <a href='${params.id}'>${params.id}</a>\r\n        // }\r\n    },\r\n\r\n    {  field: 'title',\r\n        headerName: '标题',\r\n        renderCell: (params) => {\r\n        return <a href={`problem/${params.id}`}>{params.formattedValue.toString()}</a>\r\n        },\r\n        width: 1500\r\n    },\r\n    { field: 'tags', headerName: '分类', width: 300},\r\n]\r\n\r\nexport const ProblemInfo = (prop)=> {\r\n\r\n    return (\r\n        <div style={{ height: 800, width: '100%' }}>\r\n            <DataGrid\r\n                rows={prop.problems}\r\n                columns={columns}\r\n                pageSize={5}\r\n                rowsPerPageOptions={[5]}\r\n                sx={{\r\n                    width: '100%',\r\n                    '& .super-app-theme--cell': {\r\n                        backgroundColor: 'rgba(224, 183, 60, 0.55)',\r\n                        color: '#1a3e72',\r\n                        fontWeight: '600',\r\n                    },\r\n                    '& .MuiDataGrid-cell:hover': {\r\n                        color: \"blueviolet\",\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport Typography from '@mui/material/Typography';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Stack from '@mui/material/Stack';\r\nimport {useEffect} from \"react\";\r\nimport {getProblemInfo} from \"../../api/Course\";\r\nimport {ProblemInfo} from \"./ProblemInfo\"\r\nimport {PROBLEM_PER_PAGE, SUM_PROBLEM} from \"../../constant\";\r\n\r\n\r\nexport default function ProblemList() {\r\n    const [page, setPage] = React.useState(1);\r\n    const [problems, setProblems] = React.useState([]);\r\n    const handleChange = (e, value) => {\r\n        setPage(value);\r\n    };\r\n    useEffect(()=>{\r\n        const res = [], promises  = []\r\n        for (let i=1;i<=PROBLEM_PER_PAGE;i++) {\r\n            let id = (page - 1) * PROBLEM_PER_PAGE + i\r\n            if (id>SUM_PROBLEM)\r\n                break;\r\n            promises[i-1] = getProblemInfo(id)\r\n                .then(data=>{\r\n                    res[i-1]={\r\n                        id,\r\n                        title: data.data.ProblemTitle,\r\n                        tags: data.data.Tags\r\n                    }\r\n                })\r\n        }\r\n        Promise.all(promises).then(\r\n            ()=>{\r\n                setProblems(res)\r\n            }\r\n        )\r\n    },[page])\r\n\r\n    return (\r\n        <div>\r\n            <ProblemInfo problems={problems===undefined?[]:problems}/>\r\n            <Stack spacing={2}>\r\n                <Typography>第{page}页</Typography>\r\n                <Pagination style={{margin:\"auto\"}} count={Math.ceil(SUM_PROBLEM/PROBLEM_PER_PAGE)} page={page} onChange={handleChange} />\r\n            </Stack>\r\n        </div>\r\n    );\r\n}\r\n"],"names":["getCourseDetail","id","request","url","concat","method","getProblemInfo","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","name","slot","overridesResolver","props","styles","root","useThemePropsDefault","useThemePropsSystem","joinChildren","children","separator","childrenArray","React","filter","Boolean","reduce","output","child","index","push","length","key","style","_ref","ownerState","theme","_extends","display","flexDirection","handleBreakpoints","resolveBreakpointValues","values","direction","breakpoints","propValue","spacing","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","deepmerge","_defineProperty","margin","row","column","getValue","mergeBreakpointsInOrder","Stack","options","arguments","undefined","_options$createStyled","createStyledComponent","_options$useThemeProp","useThemeProps","_options$componentNam","componentName","StackRoot","inProps","ref","themeProps","extendSxProp","_props$component","component","_props$direction","_props$spacing","divider","className","other","_objectWithoutPropertiesLoose","classes","composeClasses","generateUtilityClass","_jsx","as","clsx","createStack","styled","columns","field","headerName","width","renderCell","params","href","formattedValue","toString","ProblemInfo","prop","height","DataGrid","rows","problems","pageSize","rowsPerPageOptions","sx","backgroundColor","color","fontWeight","ProblemList","_React$useState","_React$useState2","_slicedToArray","page","setPage","_React$useState3","_React$useState4","setProblems","useEffect","res","promises","_loop","i","PROBLEM_PER_PAGE","SUM_PROBLEM","then","data","title","ProblemTitle","tags","Tags","Promise","all","_jsxs","Typography","Pagination","count","Math","ceil","onChange","e","value"],"sourceRoot":""}