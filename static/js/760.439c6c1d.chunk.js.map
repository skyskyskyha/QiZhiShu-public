{"version":3,"file":"static/js/760.439c6c1d.chunk.js","mappings":"8KAEaA,EAAgB,SAACC,GAC1B,OAAOC,EAAAA,EAAAA,GAAQ,CACXC,IAAI,kBACJC,OAAQ,OACRC,KAAMJ,GAEd,EAEaK,EAAwB,SAACC,GAClC,OAAOL,EAAAA,EAAAA,GAAQ,CACXC,IAAI,kCAADK,OAAoCD,GACvCH,OAAQ,OAEhB,C,6ICPMK,EAAU,CACZ,CAAEC,MAAO,KAAMC,WAAY,2BAAQC,MAAO,KAC1C,CAAEF,MAAO,YAAaC,WAAY,iBAAQC,MAAO,KACjD,CAAEF,MAAO,OAAQC,WAAY,eAAMC,MAAO,KAC1C,CAAEF,MAAO,SAAUC,WAAY,eAAMC,MAAO,IACxCC,cAAe,SAACC,GAA8B,OAC1CC,EAAAA,EAAAA,GAAK,YAAa,CACdC,QAA0B,6BAAjBF,EAAOG,OAAqC,iBAAjBH,EAAOG,MAC3CC,UAA4B,6BAAjBJ,EAAOG,OAAqC,iBAAjBH,EAAOG,OAC/C,GAEV,CAAEP,MAAO,QAASC,WAAY,eAAMC,MAAO,KAC3C,CAAEF,MAAO,SAAUC,WAAY,mBAAUC,MAAO,KAChD,CAAEF,MAAO,OAAQC,WAAY,mBAAUC,MAAO,KAC9C,CAAEF,MAAO,WAAYC,WAAY,eAAMC,MAAO,KAC9C,CAAEF,MAAO,aAAcC,WAAY,2BAAQC,MAAO,KAClD,CAAEF,MAAO,aAAcC,WAAY,2BAAQC,MAAO,KAClD,CAAEF,MAAO,SAAUC,WAAY,qBAAOC,MAAO,MAmDlC,SAASO,IACpB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAWpB,OAVAI,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,MACKC,MAAK,SAAAvB,GACF,IAAME,EAAKF,EAAKwB,GAChB,OAAOvB,EAAAA,EAAAA,GAAsBC,EACjC,IAAGqB,MAAK,SAAAvB,GACJoB,EA3ChB,SAA0BpB,GAgCtB,OAbaA,EAAKyB,KAAI,SAACC,GAAI,MAAI,CAC3BxB,GAAGwB,EAAKC,GACRC,UAAWF,EAAKG,UAChBC,KAAMJ,EAAKK,SACXC,OAAQN,EAAKO,iBACbC,MAAOR,EAAKS,MACZC,OAAQV,EAAKW,OACbC,KAAMZ,EAAKa,cACXC,SAAUd,EAAKe,oBACfC,WAAY,MACZC,WAAYjB,EAAKkB,WACjBC,OAAQ,MACX,GAEL,CAUwBC,CAAiB9C,EAAKA,MACtC,GACJ,GAAG,KAGC+C,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEC,OAAQ,IAAK1C,MAAO,QAAS2C,UACvCH,EAAAA,EAAAA,KAACI,EAAAA,EAAQ,CACLhC,KAAMA,EACNf,QAASA,EACTgD,SAAU,EACVC,mBAAoB,CAAC,GACrBC,aAAc,CACVC,QAAS,CACLC,UAAW,CAAC,CAAEnD,MAAO,KAAMoD,KAAM,WAGzCC,GAAI,CACAnD,MAAO,OACP,2BAA4B,CACxBoD,gBAAiB,2BACjBC,MAAO,UACPC,WAAY,OAEhB,uBAAwB,CACpBF,gBAAiB,4BACjBC,MAAO,UACPC,WAAY,OAEhB,yBAA0B,CACtBF,gBAAiB,UACjBC,MAAO,UACPC,WAAY,OAEhB,4BAA6B,CACzBD,MAAO,kBAM/B,C","sources":["api/Submission.js","components/Course/JudgingStatus.js"],"sourcesContent":["import request from \"./request\";\r\n\r\nexport const SubmitProblem = (prop) => {\r\n    return request({\r\n        url: `/problem/submit`,\r\n        method: 'post',\r\n        data: prop\r\n    })\r\n}\r\n\r\nexport const getSubmissionListById = (id) => {\r\n    return request({\r\n        url: `/problem/SubmissionList?UserID=${id}`,\r\n        method: 'get',\r\n    })\r\n}\r\n","import * as React from 'react';\r\nimport {useEffect, useState} from 'react';\r\nimport {DataGrid, GridCellParams} from '@mui/x-data-grid';\r\nimport clsx from \"clsx\";\r\nimport {GetTokenData} from \"../../util\";\r\nimport {getSubmissionListById} from \"../../api/Submission\";\r\n\r\n\r\nconst columns = [\r\n    { field: 'id', headerName: '提交编号', width: 100 },\r\n    { field: 'problemId', headerName: '问题ID', width: 100},\r\n    { field: 'name', headerName: '用户', width: 130 },\r\n    { field: 'result', headerName: '结果', width: 100,\r\n        cellClassName: (params: GridCellParams<number>) =>\r\n            clsx('super-app', {\r\n                correct: params.value === \"答案正确\" || params.value === \"正确\",\r\n                incorrect: params.value !== \"答案正确\" && params.value !== \"正确\"\r\n            }),\r\n    },\r\n    { field: 'score', headerName: '得分', width: 100 },\r\n    { field: 'memory', headerName: '内存(KB)', width: 100 },\r\n    { field: 'time', headerName: '耗时(MS)', width: 100 },\r\n    { field: 'language', headerName: '语言', width: 100 },\r\n    { field: 'codeLength', headerName: '代码长度', width: 100 },\r\n    { field: 'submitTime', headerName: '提交时间', width: 200 },\r\n    { field: 'judger', headerName: '判题机', width: 100 },\r\n]\r\n\r\nconst temprows = [\r\n    {id: 1668906, problemId: 9915, name: \"张三\", result:\"答案正确\",\r\n        score:100, memory:14095,time:14,language:\"Python\",codeLength:40,submitTime:\"2023-03-07 19:01:38\",judger:\"judger1\"},\r\n    {id: 3364916, problemId: 9925, name: \"李四\", result:\"答案正确\",\r\n        score:100, memory:195,time:30,language:\"Java\",codeLength:330,submitTime:\"2023-03-09 09:00:00\",judger:\"judger1\"},\r\n    {id: 4854906, problemId: 101, name: \"王五\", result:\"答案错误\",\r\n        score:5, memory:12015,time:44,language:\"C++\",codeLength:550,submitTime:\"2023-03-07 19:01:38\",judger:\"judger1\"},\r\n    {id: 1668908, problemId: 9915, name: \"张三\", result:\"答案错误\",\r\n        score:0, memory:14095,time:14,language:\"Python\",codeLength:30,submitTime:\"2023-03-07 18:01:38\",judger:\"judger1\"},\r\n];\r\n\r\n\r\n\r\nfunction switchDataToRows(data) {\r\n    /*\r\n    BackendID:2977\r\n    ContestID:null\r\n    CreateTime:\"2023-04-03T01:42:43.000Z\"\r\n    ExecutionTime:\"4 ms\"\r\n    ID:8\r\n    LastPing:\"2023-04-04 5:40:27\"\r\n    Memory:\"1304 KB\"\r\n    Platform:\"caoweninfo\"\r\n    ProblemID:1\r\n    ProblemName:\"【基本语句】C语言程序设计教程（第三版）课后习题1.5\"\r\n    ProgrammingLanguage:\"C++\"\r\n    Score:\"0\"\r\n    SubmissionStatus:\"答案错误\"\r\n    UserID:19\r\n    UserName:\"sky\"\r\n\r\n     */\r\n    let result = data.map((item)=>({\r\n        id:item.ID,\r\n        problemId: item.ProblemID,\r\n        name: item.UserName,\r\n        result: item.SubmissionStatus,\r\n        score: item.Score,\r\n        memory: item.Memory,\r\n        time: item.ExecutionTime,\r\n        language: item.ProgrammingLanguage,\r\n        codeLength: \"N/A\",\r\n        submitTime: item.CreateTime,\r\n        judger: \"N/A\",\r\n    }))\r\n    return result\r\n}\r\n\r\nexport default function JudgingStatus() {\r\n    const [rows, setRows] = useState({})\r\n    useEffect(() => {\r\n        GetTokenData()\r\n            .then(data => {\r\n                const id = data.Id\r\n                return getSubmissionListById(id)\r\n            }).then(data=>{\r\n                setRows(switchDataToRows(data.data))\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{ height: 800, width: '100%' }}>\r\n            <DataGrid\r\n                rows={rows}\r\n                columns={columns}\r\n                pageSize={5}\r\n                rowsPerPageOptions={[5]}\r\n                initialState={{\r\n                    sorting: {\r\n                        sortModel: [{ field: 'id', sort: 'desc' }],\r\n                    },\r\n                }}\r\n                sx={{\r\n                    width: '100%',\r\n                    '& .super-app-theme--cell': {\r\n                        backgroundColor: 'rgba(224, 183, 60, 0.55)',\r\n                        color: '#1a3e72',\r\n                        fontWeight: '600',\r\n                    },\r\n                    '& .super-app.correct': {\r\n                        backgroundColor: 'rgba(157, 255, 118, 0.49)',\r\n                        color: '#1a3e72',\r\n                        fontWeight: '600',\r\n                    },\r\n                    '& .super-app.incorrect': {\r\n                        backgroundColor: '#d47483',\r\n                        color: '#1a3e72',\r\n                        fontWeight: '600',\r\n                    },\r\n                    '& .MuiDataGrid-cell:hover': {\r\n                        color: \"blueviolet\",\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n"],"names":["SubmitProblem","prop","request","url","method","data","getSubmissionListById","id","concat","columns","field","headerName","width","cellClassName","params","clsx","correct","value","incorrect","JudgingStatus","_useState","useState","_useState2","_slicedToArray","rows","setRows","useEffect","GetTokenData","then","Id","map","item","ID","problemId","ProblemID","name","UserName","result","SubmissionStatus","score","Score","memory","Memory","time","ExecutionTime","language","ProgrammingLanguage","codeLength","submitTime","CreateTime","judger","switchDataToRows","_jsx","style","height","children","DataGrid","pageSize","rowsPerPageOptions","initialState","sorting","sortModel","sort","sx","backgroundColor","color","fontWeight"],"sourceRoot":""}